name: verify
on:
  pull_request:
    paths-ignore:
      - README.md
      - '**/README.md'
      - 'docs/**'

env:
  JDK_VERSION: 21
  GRADLE_OPTS: -Dorg.gradle.daemon=false

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Build and Run Tests
    runs-on: ubuntu-24.04-arm
    permissions:
      contents: read
      pull-requests: write
      packages: write
      # required for all workflows
      security-events: write
      checks: write
      # only required for workflows in private repositories
      actions: read
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-tags: 'true'
          fetch-depth: '0'
      - name: Set up JDK ${{ env.JDK_VERSION }}
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '${{ env.JDK_VERSION }}'
          cache: 'gradle'
      - name: Run Detekt
        run: ./gradlew detekt
      - name: Publish Detekt Report
        uses: jwgmeligmeyling/checkstyle-github-action@master
        if: success() || failure() # always run even if the previous step fails
        with:
          path: 'build/reports/detekt/merge.xml'
      - name: Build and Run Tests
        run: ./gradlew test koverXmlReport --parallel
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v5
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          os: linux-arm64
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          os: linux-arm64
      # The USERNAME and TOKEN need to correspond to the credentials environment variables used in
      # the publishing section of your build.gradle
      - name: Publish snapshot package to central.sonatype.com
        run: ./gradlew devSnapshot closeAndReleaseSonatypeStagingRepository printDevSnapshotReleaseNote
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
          GPG_SIGNING_PASSWORD: ${{ secrets.GPG_SIGNING_PASSWORD }}
      - name: Read pr note into variable
        id: read_pr_note
        run: |
          echo "PR_NOTE<<EOF" >> $GITHUB_OUTPUT
          cat build/pr-note.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Remove old PR
        if: github.event_name == 'pull_request'
        run: gh api repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments --jq '.[] | select(.body | contains("<!-- PR_NOTE_MARKER -->")) | .id' | xargs -r -I {} gh api --method DELETE /repos/${{ github.repository }}/issues/comments/{} || true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        run: gh pr comment ${{ github.event.pull_request.number }} --body "${{ steps.read_pr_note.outputs.PR_NOTE }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
